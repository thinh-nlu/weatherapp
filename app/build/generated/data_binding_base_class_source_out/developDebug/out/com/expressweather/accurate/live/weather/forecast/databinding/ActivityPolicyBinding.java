// Generated by view binder compiler. Do not edit!
package com.expressweather.accurate.live.weather.forecast.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.expressweather.accurate.live.weather.forecast.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPolicyBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView icBack;

  @NonNull
  public final ImageView icLogo;

  @NonNull
  public final View linePolicy;

  @NonNull
  public final TextView tvHeader;

  @NonNull
  public final TextView tvNameApp;

  @NonNull
  public final TextView tvPolicy;

  @NonNull
  public final TextView tvVersion;

  private ActivityPolicyBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView icBack,
      @NonNull ImageView icLogo, @NonNull View linePolicy, @NonNull TextView tvHeader,
      @NonNull TextView tvNameApp, @NonNull TextView tvPolicy, @NonNull TextView tvVersion) {
    this.rootView = rootView;
    this.icBack = icBack;
    this.icLogo = icLogo;
    this.linePolicy = linePolicy;
    this.tvHeader = tvHeader;
    this.tvNameApp = tvNameApp;
    this.tvPolicy = tvPolicy;
    this.tvVersion = tvVersion;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPolicyBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPolicyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_policy, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPolicyBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ic_back;
      ImageView icBack = ViewBindings.findChildViewById(rootView, id);
      if (icBack == null) {
        break missingId;
      }

      id = R.id.icLogo;
      ImageView icLogo = ViewBindings.findChildViewById(rootView, id);
      if (icLogo == null) {
        break missingId;
      }

      id = R.id.linePolicy;
      View linePolicy = ViewBindings.findChildViewById(rootView, id);
      if (linePolicy == null) {
        break missingId;
      }

      id = R.id.tvHeader;
      TextView tvHeader = ViewBindings.findChildViewById(rootView, id);
      if (tvHeader == null) {
        break missingId;
      }

      id = R.id.tvNameApp;
      TextView tvNameApp = ViewBindings.findChildViewById(rootView, id);
      if (tvNameApp == null) {
        break missingId;
      }

      id = R.id.tvPolicy;
      TextView tvPolicy = ViewBindings.findChildViewById(rootView, id);
      if (tvPolicy == null) {
        break missingId;
      }

      id = R.id.tvVersion;
      TextView tvVersion = ViewBindings.findChildViewById(rootView, id);
      if (tvVersion == null) {
        break missingId;
      }

      return new ActivityPolicyBinding((ConstraintLayout) rootView, icBack, icLogo, linePolicy,
          tvHeader, tvNameApp, tvPolicy, tvVersion);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
