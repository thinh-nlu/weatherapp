// Generated by view binder compiler. Do not edit!
package com.expressweather.accurate.live.weather.forecast.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.expressweather.accurate.live.weather.forecast.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPermissionBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView cvDeviceLocation;

  @NonNull
  public final CardView cvNotification;

  @NonNull
  public final ImageView imgSwitchDeviceLocation;

  @NonNull
  public final ImageView imgSwitchNotification;

  @NonNull
  public final ImageView ivPermission;

  @NonNull
  public final TextView tvContent;

  @NonNull
  public final TextView tvDeviceLocation;

  @NonNull
  public final TextView tvGo;

  @NonNull
  public final TextView tvNotification;

  @NonNull
  public final TextView tvPermission;

  private ActivityPermissionBinding(@NonNull ConstraintLayout rootView,
      @NonNull CardView cvDeviceLocation, @NonNull CardView cvNotification,
      @NonNull ImageView imgSwitchDeviceLocation, @NonNull ImageView imgSwitchNotification,
      @NonNull ImageView ivPermission, @NonNull TextView tvContent,
      @NonNull TextView tvDeviceLocation, @NonNull TextView tvGo, @NonNull TextView tvNotification,
      @NonNull TextView tvPermission) {
    this.rootView = rootView;
    this.cvDeviceLocation = cvDeviceLocation;
    this.cvNotification = cvNotification;
    this.imgSwitchDeviceLocation = imgSwitchDeviceLocation;
    this.imgSwitchNotification = imgSwitchNotification;
    this.ivPermission = ivPermission;
    this.tvContent = tvContent;
    this.tvDeviceLocation = tvDeviceLocation;
    this.tvGo = tvGo;
    this.tvNotification = tvNotification;
    this.tvPermission = tvPermission;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPermissionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPermissionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_permission, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPermissionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cvDeviceLocation;
      CardView cvDeviceLocation = ViewBindings.findChildViewById(rootView, id);
      if (cvDeviceLocation == null) {
        break missingId;
      }

      id = R.id.cvNotification;
      CardView cvNotification = ViewBindings.findChildViewById(rootView, id);
      if (cvNotification == null) {
        break missingId;
      }

      id = R.id.imgSwitchDeviceLocation;
      ImageView imgSwitchDeviceLocation = ViewBindings.findChildViewById(rootView, id);
      if (imgSwitchDeviceLocation == null) {
        break missingId;
      }

      id = R.id.imgSwitchNotification;
      ImageView imgSwitchNotification = ViewBindings.findChildViewById(rootView, id);
      if (imgSwitchNotification == null) {
        break missingId;
      }

      id = R.id.ivPermission;
      ImageView ivPermission = ViewBindings.findChildViewById(rootView, id);
      if (ivPermission == null) {
        break missingId;
      }

      id = R.id.tvContent;
      TextView tvContent = ViewBindings.findChildViewById(rootView, id);
      if (tvContent == null) {
        break missingId;
      }

      id = R.id.tvDeviceLocation;
      TextView tvDeviceLocation = ViewBindings.findChildViewById(rootView, id);
      if (tvDeviceLocation == null) {
        break missingId;
      }

      id = R.id.tvGo;
      TextView tvGo = ViewBindings.findChildViewById(rootView, id);
      if (tvGo == null) {
        break missingId;
      }

      id = R.id.tvNotification;
      TextView tvNotification = ViewBindings.findChildViewById(rootView, id);
      if (tvNotification == null) {
        break missingId;
      }

      id = R.id.tvPermission;
      TextView tvPermission = ViewBindings.findChildViewById(rootView, id);
      if (tvPermission == null) {
        break missingId;
      }

      return new ActivityPermissionBinding((ConstraintLayout) rootView, cvDeviceLocation,
          cvNotification, imgSwitchDeviceLocation, imgSwitchNotification, ivPermission, tvContent,
          tvDeviceLocation, tvGo, tvNotification, tvPermission);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
